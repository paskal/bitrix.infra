user nginx;
worker_processes auto;

error_log  /var/log/nginx/other.error.log warn;
pid        /var/run/nginx.pid;

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;
load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;

events {
    worker_connections  8192;
    use                 epoll;
    multi_accept        on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  text/plain;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     '$request_time $upstream_response_time';

    # https://www.nginx.com/blog/using-nginx-logging-for-application-performance-monitoring/
    # use that log for troubleshooting the app performance
    log_format apm '"$time_local" client=$remote_addr '
                   'http_x_forwarded_for="$http_x_forwarded_for" '
                   'http_x_forwarded_host="$http_x_forwarded_host" '
                   'method=$request_method request="$request" '
                   'request_length=$request_length '
                   'status=$status bytes_sent=$bytes_sent '
                   'body_bytes_sent=$body_bytes_sent '
                   'referer=$http_referer '
                   'user_agent="$http_user_agent" '
                   'upstream_addr=$upstream_addr '
                   'upstream_status=$upstream_status '
                   'request_time=$request_time '
                   'upstream_response_time=$upstream_response_time '
                   'upstream_connect_time=$upstream_connect_time '
                   'upstream_header_time=$upstream_header_time';

    # enable brotli
    brotli                          on;
    brotli_types application/atom+xml application/javascript application/json application/rss+xml
                   application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
                   application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
                   font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
                   image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml;

    # Main settings
    sendfile                        on;
    tcp_nopush                      on;
    tcp_nodelay                     on;
    client_header_timeout           60s;
    client_body_timeout             60s;
    client_header_buffer_size       2k;
    client_body_buffer_size         4m;
    client_max_body_size            20m;
    large_client_header_buffers     4   8k;
    send_timeout                    60s;
    keepalive_timeout               60s;
    reset_timedout_connection       on;
    server_tokens                   off;
    server_name_in_redirect         off;
    server_names_hash_max_size      512;
    server_names_hash_bucket_size   512;
    merge_slashes                   off;
    # for long URLs in config/nginx/conf.d/redirects-map.conf
    map_hash_bucket_size            512;
    # increase concurrency performance
    keepalive_requests              1000;
    # 0-RTT QUIC connection resumption
    ssl_early_data                  on;
    # http2 everywhere
    http2                           on;

    map $remote_addr $not_logging {
        default 1;
        "158.101.196.116" 0;
        # add your monitoring IPs there
    }

    access_log /var/log/nginx/other.access.log main if=$not_logging;

    # Compression
    gzip                on;
    gzip_static         on;
    gzip_vary           on;
    gzip_comp_level     6;
    gzip_min_length     512;
    gzip_buffers        8 64k;
    gzip_types          text/plain text/css text/javascript text/js text/xml application/json application/javascript application/x-javascript application/xml application/xml+rss application/x-font-ttf image/svg+xml font/opentype;
    gzip_proxied        any;
    gzip_disable        "msie6";
    gzip_http_version   1.0;

    # SSL config from https://ssl-config.mozilla.org/#server=nginx&version=1.80.0&config=intermediate&openssl=1.1.1d&guideline=5.6
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;
    ssl_dhparam /etc/nginx/letsencrypt/dhparams.pem;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers on;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 ipv6=off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security 'max-age=31536000; includeSubdomains; preload' always;

    # Reverse CloudFlare proxy
    # DO NOT use CloudFlare in Russia, Yandex will ban you!
#    set_real_ip_from 130.193.62.59;
#    real_ip_header X-Forwarded-For;
#    real_ip_recursive on;

    include /etc/nginx/conf.d/*.conf;
}
